{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4LCXA,+8BACyE,IACvE,oHAAK,sGAEL,MAEF,sHAAI,wGAA2B,MAC/B,gwBAAmG,IAEnG,mLACoC,YAAlC;;wBAAiC;MADnC,ipBACoC,sFAAW,mDAVgC,qBAAkB,EAC/F,mBAA0B,EADsE,oBAAkB,EACvF,oBAAuB,EADJ,oBAAc,EAAC,mBAAe,EACzB,sBAAmB,EADtC,mBAAa,EAA/C,YACyE,EADM,SAAkB,EAC/F,SAA0B,EADsE,SAAkB,EACvF,SAAuB,EADJ,SAAc,EAAC,SAAe,EACzB,SAAmB,EADtC,SAAa,GAOO,0BAA0B,EAAtC,mBAAW,EAA4B,oBAAiB,SAArF,oBAAa,EAAC,oBAAc,EAAzC,YAAmG,EAA7C,SAA0B,EAAtC,SAAW,EAA4B,UAAiB,EAArF,UAAa,EAAC,UAAc,GAED,yBAAyB,EAA9C,2BAAoB,EAA2B,mBAAY,EAAC,mBAAa,EAA5F,aACoC,EADI,UAAyB,EAA9C,UAAoB,EAA2B,UAAY,EAAC,UAAa;;;;;;;;;;;;;;;;ACF5F;AAAA;AAAO,MAAM,YAAY;IALzB;QASE,WAAM,GAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACxC,gBAAW,GAAG,IAAI,CAAC;IAMrB,CAAC;IAJC,aAAa,CAAC,KAAU;QACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCD;AAAA;AAAO,MAAM,SAAS;CAAI;;;;;;;;;;;;;ACpB1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<!--Notifications-->\n<jqxNotification #msgNotification [width]=\"250\" [blink]=\"true\" [opacity]=\"0.9\" [autoOpen]=\"false\" [autoClose]=\"true\"\n  [animationOpenDelay]=\"800\" [autoCloseDelay]=\"3000\" [template]=\"'info'\">\n  <div>\n    Welcome to our website.\n  </div>\n</jqxNotification>\n<h2>Angular demo with jqWidgets</h2>\n<jqxBarGauge [width]=\"600\" [height]=\"600\" [max]=\"150\" [colorScheme]=\"'scheme02'\" [values]=\"values\">\n</jqxBarGauge>\n<jqxButton #button [theme]=\"'material'\" [textPosition]=\"'center'\" [width]=\"80\" [height]=\"30\"\n  (onClick)=\"buttonClicked($event)\">Click this!</jqxButton>\n","import { Component, ViewChild } from '@angular/core';\nimport { jqxNotificationComponent } from 'jqwidgets-ng/jqxnotification';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild('msgNotification', { static: false })\n  msgNotification: jqxNotificationComponent;\n\n  values: number[] = [102, 115, 130, 137];\n  useGradient = true;\n\n  buttonClicked(event: any) {\n    console.log(event);\n    this.msgNotification.open();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { jqxBarGaugeModule } from 'jqwidgets-ng/jqxbargauge';\nimport { jqxButtonModule } from 'jqwidgets-ng/jqxbuttons';\nimport { jqxNotificationModule } from 'jqwidgets-ng/jqxnotification';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    jqxBarGaugeModule,\n    jqxButtonModule,\n    jqxNotificationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}